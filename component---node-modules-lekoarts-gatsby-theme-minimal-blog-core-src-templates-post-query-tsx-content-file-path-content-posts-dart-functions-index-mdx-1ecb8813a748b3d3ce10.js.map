{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-dart-functions-index-mdx-1ecb8813a748b3d3ce10.js","mappings":"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","sources":["webpack://lisarnjs-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://lisarnjs-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://lisarnjs-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://lisarnjs-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://lisarnjs-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://lisarnjs-blog/./content/posts/dart-functions/index.mdx","webpack://lisarnjs-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"defining a function\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-Dart\",\n    title: \"example\"\n  }, \"void main() {\\n\\tprint(sayHello('lisa')); // Hello lisa nice to meet u\\n\\tprint(plus(1, 2)); // 3\\n}\\n\\n// void() => 아무것도 return을 안함\\nvoid sayHello(String name){\\n\\tprint('Hello $name nice to meet u');\\n}\\n\\n// String() => string을 return함\\nString sayHello(String name){\\n\\treturn 'Hello $name nice to meet u';\\n}\\n// fat arrow syntax = 곧바로 return할때만 (함수 축약형으로 쓰는법)\\nString sayHello(String name) => 'Hello $name nice to meet u';\\n\\nnum plus(num a, num b) => a + b;\\n\")), \"\\n\", React.createElement(_components.h2, null, \"named parameters ⭐️⭐️⭐️\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-Dart\",\n    title: \"example\"\n  }, \"String sayHello(String name, int age, String country){\\n\\treturn \\\"Hello $name, you are $age, and u come from $country\\\";\\n}\\n\\nvoid main() {\\n\\t// 함수가 뭘 표현하는지 모르고 직관적이지 않음\\n\\tprint(sayHello('lisa', 20, 'korea'));\\n}\\n\\n// name arguments를 사용해서 직관적으로 바꿔줄거임(얘는 인자 순서는 중요하지 않음)\\n// 함수 인자 부분에 {} 추가\\n// null일 경우를 대비해서 default value를 설정해주면 됨\\nString sayHello({\\n\\tString name = 'anon',\\n\\tint age = 99,\\n\\tString country = 'lala'}){\\n\\treturn \\\"Hello $name, you are $age, and u come from $country\\\";\\n}\\n// default value 설정하고 싶지 않을때는 required를 달아줘서 필수값으로 설정해주면\\n// 해당 값이 null인 상태로 호출 시 에러 표출함 (like typescript)\\nString sayHello({\\n\\trequired String name,\\n\\trequired int age,\\n\\trequired String country}){\\n\\treturn \\\"Hello $name, you are $age, and u come from $country\\\";\\n}\\nvoid main() {\\n\\tprint(sayHello(\\n\\t\\tage: 20,\\n\\t\\tcountry: 'korea',\\n\\t\\tname: 'lisa'\\n\\t));\\n}\\n\")), \"\\n\", React.createElement(_components.h2, null, \"optional positional parameters ⭐️\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-Dart\",\n    title: \"example\"\n  }, \"String sayHello(\\n\\tString name,\\n\\tint age,\\n\\t[String? country = 'usa'])\\n\\t=> 'Hello $name, u are $age years old from $country';\\n\\nvoid main() {\\n\\tsayHello('lisa', 20);\\n}\\n\")), \"\\n\", React.createElement(_components.h2, null, \"QQ operator (?? , ??=)\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-Dart\",\n    title: \"example\"\n  }, \"String capitalizeNme(String? name) {\\n\\tif(name !== null) {\\n\\t\\treturn name.toUpperCase();\\n\\t}\\n\\treturn 'ANON';\\n}\\n\\nString capitalizeNme(String? name) => name != null ? name.toUpperCase() : 'ANON';\\n\\nString capitalizeNme(String? name) => name?.toUpperCase() ?? 'ANON';\\n\\nvoid main() {\\n\\tcapitalizeNme('lisa');\\n\\tcapitalizeNme(null);\\n}\\n\\nvoid main() {\\n\\tString? name;\\n\\tname ??= 'lisa'; // ??= : name이 null이라면 lisa라는 값을 할당해줘\\n}\\n\")), \"\\n\", React.createElement(_components.h2, null, \"Typedef\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-Dart\",\n    title: \"example\"\n  }, \"typedef ListOfInts = List<int>\\n// List를 반대로 뒤집어주는 Function\\nList<int> reverseListOfNumbers(List<int> list) {\\n\\tvar reversed = list.reversed;\\n\\treturn reversed.toList();\\n}\\n// 같은 자료형끼리 이름을 붙혀줄 수 있음 ts같다\\nListOfInts reverseListOfNumbers(ListOfInts list) {\\n\\tvar reversed = list.reversed;\\n\\treturn reversed.toList();\\n}\\nvoid main() {\\n\\treverseListOfNumbers([1,2,3]);\\n}\\n\\n// typedef 간단한 data의 alias를 만들때 유용함\\n// 아래처럼 객체 구조까지 정확히 표현할 필요 없을때 유용함\\n// 객체 구조까지 타입 지정해줄거면 class 사용해야함\\ntypedef UserInfo = Map<String, String>;\\nString sayHi(Map<String, String> userInfo){\\n\\treturn 'Hi, ${userInfo['name']}';\\n}\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/kwon-eunseo/Documents/my-dev/blog/content/posts/dart-functions/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes","name","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","_components","Object","assign","h2","pre","code","_provideComponents","components","className","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}