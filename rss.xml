<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Lisarnjs Blog]]></title><description><![CDATA[Typography driven, feature-rich blogging theme with minimal aesthetics. Includes tags/categories support and extensive features for code blocks such as live preview, line numbers, and line highlighting.]]></description><link>https://https://lisarnjs.github.io</link><generator>GatsbyJS</generator><lastBuildDate>Mon, 29 Jan 2024 15:03:05 GMT</lastBuildDate><item><title><![CDATA[프론트엔드 개발자가 플러터를 시작하다!]]></title><link>https://https://lisarnjs.github.io/프론트엔드-개발자가-플러터를-시작하다</link><guid isPermaLink="false">https://https://lisarnjs.github.io/프론트엔드-개발자가-플러터를-시작하다</guid><pubDate>Wed, 17 Jan 2024 15:00:00 GMT</pubDate><content:encoded>&lt;p&gt;갑자기 플러터를 시작한다고? 적은 인원의 개발팀(프론트엔드 1명, 백엔드 1명에서 프론트엔드가 &apos;나&apos;이다)이 존재하는 스타트업에서
 웹 개발을 넘어 앱 개발에 도전해보고 싶다고 한다.

웹에 집중도가 낮아지다가 나의 필요성이 사라지지 않을까?라는 걱정과…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://https://lisarnjs.github.io/프론트엔드-개발자가-플러터를-시작하다&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Seperate HTML a tag and button tag]]></title><link>https://https://lisarnjs.github.io/seperate-html-a-tag-and-button-tag</link><guid isPermaLink="false">https://https://lisarnjs.github.io/seperate-html-a-tag-and-button-tag</guid><pubDate>Sun, 14 Jan 2024 15:00:00 GMT</pubDate><content:encoded>&lt;p&gt;용도에 따라 a와 button를 분리해서 사용해야 한다?! ✅ 분리하기 위한 체크리스트

페이지의 이동 or 팝업 페이지의 호출을 위해 사용되는가? -&gt; &lt;a&gt; 스크립트 작동 등 기능을 위해 사용되는가? -&gt; &lt;button&gt; 둘 다 아님! 그냥 클릭…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://https://lisarnjs.github.io/seperate-html-a-tag-and-button-tag&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Dart Class Part1]]></title><link>https://https://lisarnjs.github.io/dart-class-part-1</link><guid isPermaLink="false">https://https://lisarnjs.github.io/dart-class-part-1</guid><pubDate>Tue, 09 Jan 2024 15:00:00 GMT</pubDate><content:encoded>&lt;p&gt;class // class안에서 변수를 정의할 때는 타입을 꼭 지정해줘야함(var 사용nono)
class Player {
	String name = &apos;lisa&apos;;
	// 만약 name을 변경하지 못하게 하고 싶다면? 아래처럼!!
	final…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://https://lisarnjs.github.io/dart-class-part-1&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Dart Functions]]></title><link>https://https://lisarnjs.github.io/dart-functions</link><guid isPermaLink="false">https://https://lisarnjs.github.io/dart-functions</guid><pubDate>Mon, 08 Jan 2024 15:00:00 GMT</pubDate><content:encoded>&lt;p&gt;defining a function void main() {
	print(sayHello(&apos;lisa&apos;)); // Hello lisa nice to meet u
	print(plus(1, 2)); // 3
}

// void() =&gt; 아무것도…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://https://lisarnjs.github.io/dart-functions&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Dart Data Types]]></title><link>https://https://lisarnjs.github.io/dart-data-types</link><guid isPermaLink="false">https://https://lisarnjs.github.io/dart-data-types</guid><pubDate>Sun, 07 Jan 2024 15:00:00 GMT</pubDate><content:encoded>&lt;p&gt;basic data types void main() {
	String name = &apos;&apos;; // String : 문자열을 쓸 수 있는 타입
	bool alive = true; // bool : true of false

	int age = 12…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://https://lisarnjs.github.io/dart-data-types&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Dart Variables]]></title><link>https://https://lisarnjs.github.io/dart-variables</link><guid isPermaLink="false">https://https://lisarnjs.github.io/dart-variables</guid><pubDate>Sat, 06 Jan 2024 15:00:00 GMT</pubDate><content:encoded>&lt;p&gt;var 함수 / 메소드 내부에 지역 변수를 선언할 때 사용 class에서 변수 / property 선언할 때 사용 var를 사용해도 dart 컴파일러는 해당 변수의 타입을 자동으로 파악함
void main() {
	var name = &apos;lisa&apos;;…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://https://lisarnjs.github.io/dart-variables&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Group Anagrams In Javascript]]></title><link>https://https://lisarnjs.github.io/group-anagrams-in-javascript</link><guid isPermaLink="false">https://https://lisarnjs.github.io/group-anagrams-in-javascript</guid><pubDate>Fri, 01 Sep 2023 15:00:00 GMT</pubDate><content:encoded>&lt;p&gt;문제 설명 문제 보러가기

문쟈열로 이루어진 배열 strs가 주어지고, anagram인 것끼리 배열로 묶어야 하는 문제이다.

Example
Input: strs = [&quot;eat&quot;,&quot;tea&quot;,&quot;tan&quot;,&quot;ate&quot;,&quot;nat&quot;,&quot;bat&quot;]
Output…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://https://lisarnjs.github.io/group-anagrams-in-javascript&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Fractional Addition - 분수의 덧셈]]></title><link>https://https://lisarnjs.github.io/fractional-addition-분수의-덧셈</link><guid isPermaLink="false">https://https://lisarnjs.github.io/fractional-addition-분수의-덧셈</guid><pubDate>Fri, 01 Sep 2023 15:00:00 GMT</pubDate><content:encoded>&lt;p&gt;문제 설명 문제 보러가기

첫 번째 분수의 분자와 분모를 뜻하는 numer1, denom1,
 두 번째 분수의 분자와 분모를 뜻하는 numer2, denom2가 매개변수로 주어집니다.
 두 분수를 더한 값을 기약 분수로 나타냈을 때 분자와 분모를 순서대로…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://https://lisarnjs.github.io/fractional-addition-분수의-덧셈&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Two Sum With Javascript]]></title><link>https://https://lisarnjs.github.io/two-sum-with-javascript</link><guid isPermaLink="false">https://https://lisarnjs.github.io/two-sum-with-javascript</guid><pubDate>Thu, 31 Aug 2023 15:00:00 GMT</pubDate><content:encoded>&lt;p&gt;문제 설명 문제 보러가기

nums배열과 정수target이 주어지고, nums배열에서 인접한 두 수의 합이 target일 경우 두 수의 index를 배열로 반환하는 문제이다.

Example
Input: nums = [2,7,11,15], target =…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://https://lisarnjs.github.io/two-sum-with-javascript&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Valid Anagram with Javascript]]></title><link>https://https://lisarnjs.github.io/valid-anagram-with-javascript</link><guid isPermaLink="false">https://https://lisarnjs.github.io/valid-anagram-with-javascript</guid><pubDate>Wed, 30 Aug 2023 15:00:00 GMT</pubDate><content:encoded>&lt;p&gt;문제 설명 문제 보러가기

주어진 문자열 s와 t가 같은 문자들로 구성되어 있는지 검사하는 문제이다.

s와 t가 같은 문자들로 구성되어 있으면 true, 그렇지 않으면 false를 return한다.

Example
Input: s = &quot;anagram…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://https://lisarnjs.github.io/valid-anagram-with-javascript&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Contains Duplicate with Javascript]]></title><link>https://https://lisarnjs.github.io/contains-duplicate-with-javascript</link><guid isPermaLink="false">https://https://lisarnjs.github.io/contains-duplicate-with-javascript</guid><pubDate>Tue, 29 Aug 2023 15:00:00 GMT</pubDate><content:encoded>&lt;p&gt;문제 설명 문제 보러가기

배열 안에 중복된 요소가 있는지 검사하는 문제이다.

배열에서 중복된 요소가 있으면 true를, 없다면 false를 return하면 된다.

Example
Input: nums = [1,2,3,1]
Output: true…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://https://lisarnjs.github.io/contains-duplicate-with-javascript&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Lisarnjs Test]]></title><link>https://https://lisarnjs.github.io/lisarnjs-test</link><guid isPermaLink="false">https://https://lisarnjs.github.io/lisarnjs-test</guid><pubDate>Fri, 16 Sep 2022 15:00:00 GMT</pubDate><content:encoded>&lt;p&gt;gatsby blog 작성법 main에서만 작업한다. 작업 후 git add / commit / main으로 push 까지 진행한다. node version이 18.0.0이상 인지 확인하고 npm run deploy를 진행하면 알아서…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://https://lisarnjs.github.io/lisarnjs-test&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Markdown Reference]]></title><link>https://https://lisarnjs.github.io/markdown-reference</link><guid isPermaLink="false">https://https://lisarnjs.github.io/markdown-reference</guid><pubDate>Sun, 11 Sep 2022 15:00:00 GMT</pubDate><content:encoded>&lt;p&gt;What to expect from here on out What follows from here is just a bunch of absolute nonsense I&apos;ve written to dogfood the plugin itself. It…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://https://lisarnjs.github.io/markdown-reference&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Code Block Examples]]></title><link>https://https://lisarnjs.github.io/code-block-examples</link><guid isPermaLink="false">https://https://lisarnjs.github.io/code-block-examples</guid><pubDate>Sat, 10 Sep 2022 15:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Here will a React component go: Here will a normal code block go:

(function() {

var cache = {};
var form = $(&apos;form&apos;);
var minified = true…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://https://lisarnjs.github.io/code-block-examples&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Normal Text]]></title><link>https://https://lisarnjs.github.io/normal-text-override</link><guid isPermaLink="false">https://https://lisarnjs.github.io/normal-text-override</guid><pubDate>Fri, 09 Sep 2022 15:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Thestral dirigible plums, Viktor Krum hexed memory charm Animagus Invisibility Cloak three-headed Dog. Half-Blood Prince Invisibility Cloak…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://https://lisarnjs.github.io/normal-text-override&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item></channel></rss>